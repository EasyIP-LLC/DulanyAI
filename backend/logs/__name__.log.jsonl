{"level": "INFO", "message": "This request used about 542.25 tokens", "timestamp": "2024-06-29T00:17:03.130973+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:17:04.549935+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 1969.0 tokens", "timestamp": "2024-06-29T00:17:08.601482+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:17:10.488934+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "ERROR", "message": "'ResourceProtector' object has no attribute 'get_token'", "timestamp": "2024-06-29T00:17:18.784799+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 36, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:18:07.705704+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:18:47.476223+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 1920.75 tokens", "timestamp": "2024-06-29T00:18:56.097067+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:18:57.858576+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /save/patent [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 105, in decorated\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/developer/EasyIP/backend/app/blueprints/saved/routes.py\", line 23, in patent\n    token = require_auth.get_token()\n            ^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'ResourceProtector' object has no attribute 'get_token'", "timestamp": "2024-06-29T00:18:59.507279+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:19:51.448641+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:28:10.233827+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:28:37.696695+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:28:44.561453+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:28:48.822078+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:29:12.012798+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:29:19.606616+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:29:37.574888+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:29:40.746051+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:29:43.960271+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:29:52.579174+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:30:01.352877+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:30:02.919542+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:30:03.607152+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:30:04.290070+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:30:04.889684+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:30:05.451798+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:30:05.992052+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:30:16.863102+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 1851.75 tokens", "timestamp": "2024-06-29T00:30:17.372863+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:30:19.233262+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Saver.savePatent() missing 1 required positional argument: 'patentData'", "timestamp": "2024-06-29T00:30:21.019695+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 36, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:30:45.469505+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 3965.25 tokens", "timestamp": "2024-06-29T00:30:48.592869+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:30:50.923555+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Saver.savePatent() missing 1 required positional argument: 'patentData'", "timestamp": "2024-06-29T00:30:52.391137+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 36, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:30:59.690744+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 1943.0 tokens", "timestamp": "2024-06-29T00:31:00.151427+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:31:02.291517+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /save/patent [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 105, in decorated\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/developer/EasyIP/backend/app/blueprints/saved/routes.py\", line 25, in patent\n    print(\"CTX\", ctx)\n                 ^^^\nNameError: name 'ctx' is not defined", "timestamp": "2024-06-29T00:31:04.095604+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:31:17.000783+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:31:22.270712+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 2138.0 tokens", "timestamp": "2024-06-29T00:31:23.059282+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:31:24.993409+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Saver.savePatent() missing 1 required positional argument: 'patentData'", "timestamp": "2024-06-29T00:31:26.780909+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 31, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:32:09.194720+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:32:28.207147+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:33:31.813092+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:33:36.093131+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:33:50.320169+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:33:56.630985+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Exception on /llm/extractSpecificPatentMetrics [POST]\nTraceback (most recent call last):\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 1473, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 882, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n                                                ^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 880, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/flask/app.py\", line 865, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 98, in decorated\n    self.acquire_token(**claims)\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/integrations/flask_oauth2/resource_protector.py\", line 69, in acquire_token\n    token = self.validate_request(request=request, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/devk/Developer/EasyIP/backend/env/lib/python3.12/site-packages/authlib/oauth2/rfc6749/resource_protector.py\", line 139, in validate_request\n    validator.validate_token(token, scopes, request, **kwargs)\nTypeError: Auth0JWTBearerTokenValidator.validate_token() takes 3 positional arguments but 4 were given", "timestamp": "2024-06-29T00:33:58.140130+00:00", "logger": "app", "module": "app", "function": "log_exception", "line": 838, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:34:05.358918+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 2613.75 tokens", "timestamp": "2024-06-29T00:34:05.946926+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:34:07.670666+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "INFO", "message": "Received data: patentInfo=PatentInfo(abstract='A dual brewing mechanism is provided. The dual brewing mechanism includes a hot water pipe, an espresso brewing device, a first solenoid valve, a pour over device and a second solenoid valve. The espresso brewing device includes a brewing head that has a flow channel configured therein, and hot water can be transported to the flow channel through a first pipe body of the hot water pipe. The first solenoid valve is in communication with the flow channel of the espresso brewing device, the hot water is transported to the pour over device through the second pipe body of the hot water pipe, and the second solenoid valve is in communication with the pour over device.', alias='LIU', id='US20220039588A1', image='https://api.projectpq.ai/patents/US20220039588A1/thumbnails/1', index='A47J', inventors=['KUANG-YU LIU'], mapping=None, owner='GINO CREATION CO., LTD.', publication_date='2022-02-10', publication_id='US20220039588A1', score=0.15316814184188843, snippet=None, title='DUAL BREWING MECHANISM', type='patent', www_link='https://patents.google.com/patent/US20220039588A1/en') search='coffee machine' summary='' percentages={'Allows for customizable strength.': 0.3, 'Brews coffee.': 0.9, 'Can make cappuccinos.': 0.6, 'Can make espresso.': 1.0, 'Has auto shutoff feature.': 0.2, 'Has built-in grinder.': 0.1, 'Has milk frother.': 0.1, 'Has programmable settings.': 0.2} citations={}", "timestamp": "2024-06-29T00:34:09.375747+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 37, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:39:23.273062+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:39:27.923715+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:39:31.298794+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:39:36.472714+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:39:42.990737+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:39:48.391667+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:39:56.429576+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:40:01.857370+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:40:40.613901+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:40:44.911043+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:43:29.286120+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:51:44.076087+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:52:37.192411+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:52:48.870703+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:53:04.312969+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:53:10.111133+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 2461.25 tokens", "timestamp": "2024-06-29T00:53:16.712848+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:53:18.444104+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "INFO", "message": "Received data: patentInfo=PatentInfo(abstract='A beverage making machine where the main machine is located under the counter out of the view of the customers. This new design allows for the machine to be built in sections instead of inserting all components into one device and allows for easy servicing. Using electrically heated hoses allows for the main user interface to be located any distance away from the brewing machine, which frees up counter space and allows for easier servicing. The electrically heated hoses are a key component to this machine because the hose is electrically heated to maintain a desired temperature level so that heated fluids do not lose heat upon transfer from boiler to dispenser, making this machine a temperature stable coffee/espresso machine.', alias='Myers et al.', id='US20180014686A1', image='https://api.projectpq.ai/patents/US20180014686A1/thumbnails/1', index='A47J', inventors=['Michael Gregory Myers', 'Terrance David Ziniewicz'], mapping=None, owner='Assignee N/A', publication_date='2018-01-18', publication_id='US20180014686A1', score=0.1538107991218567, snippet=None, title='System and Method for Fluid Temperature Stability for Multi-Section Beverage Making Machine', type='patent', www_link='https://patents.google.com/patent/US20180014686A1/en') search='coffee machine' summary='' percentages={'Allows for customizable strength.': 0.3, 'Brews coffee.': 0.9, 'Can make cappuccinos.': 0.7, 'Can make espresso.': 0.9, 'Has auto shutoff feature.': 0.1, 'Has built-in grinder.': 0.1, 'Has milk frother.': 0.7, 'Has programmable settings.': 0.8} citations={}", "timestamp": "2024-06-29T00:53:20.295071+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 40, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:54:46.015771+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:54:52.520913+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:55:04.223498+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:55:10.528419+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:55:16.839608+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:55:24.271059+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:55:29.552000+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 1915.0 tokens", "timestamp": "2024-06-29T00:55:31.980406+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:55:34.179070+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "ERROR", "message": "'PatentData' object has no attribute 'patent_data'", "timestamp": "2024-06-29T00:55:37.662863+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 38, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:56:22.703534+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:56:33.335913+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 4686.5 tokens", "timestamp": "2024-06-29T00:56:34.714913+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:56:36.568034+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Failed to commit objects: (builtins.TypeError) Object of type PatentData is not JSON serializable\n[SQL: INSERT INTO public.saved_patent (user_id, organization_id, patent_data) VALUES (%(user_id)s, %(organization_id)s, %(patent_data)s) RETURNING public.saved_patent.id, public.saved_patent.saved_on]\n[parameters: [{'user_id': 'google-oauth2|108809862173138748904', 'patent_data': PatentData(patentInfo=PatentInfo(abstract='The automatic coffee machine (1) comprise ... (1780 characters truncated) ... ff feature.': 0.1, 'Has built-in grinder.': 0.1, 'Has milk frother.': 0.9, 'Has programmable settings.': 0.1}, citations={}), 'organization_id': None}]]", "timestamp": "2024-06-29T00:56:42.922011+00:00", "logger": "database.databaseCall", "module": "databaseCall", "function": "createAndCommit", "line": 44, "thread_name": "MainThread"}
{"level": "ERROR", "message": "Failed to commit objects: (builtins.TypeError) Object of type PatentData is not JSON serializable\n[SQL: INSERT INTO public.saved_patent (user_id, organization_id, patent_data) VALUES (%(user_id)s, %(organization_id)s, %(patent_data)s) RETURNING public.saved_patent.id, public.saved_patent.saved_on]\n[parameters: [{'user_id': 'google-oauth2|108809862173138748904', 'patent_data': PatentData(patentInfo=PatentInfo(abstract='The automatic coffee machine (1) comprise ... (1780 characters truncated) ... ff feature.': 0.1, 'Has built-in grinder.': 0.1, 'Has milk frother.': 0.9, 'Has programmable settings.': 0.1}, citations={}), 'organization_id': None}]]", "timestamp": "2024-06-29T00:56:42.922283+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 38, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:57:04.842657+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:57:12.149060+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 542.25 tokens", "timestamp": "2024-06-29T00:57:16.483690+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:57:17.671536+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 2990.25 tokens", "timestamp": "2024-06-29T00:57:24.501301+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:57:26.362510+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "INFO", "message": "Received data: patentInfo=PatentInfo(abstract='A method for making cold brew coffee and a system for brewing cold brew coffee is described. A cold brew coffee device may include a water reservoir containing water, a plurality of tubes for transporting water in the water reservoir to a different location, a drip mechanism for receiving water from the water reservoir, a coffee grounds container for receiving water from the drip mechanism, a pump for pumping water from the water reservoir to the drip mechanism, a container for collecting coffee-infused water from the coffee grounds container, a user interface for displaying information and providing alerts, a controller for controlling the pump and user interface, and a battery for providing power to the controller, the pump, and the user interface.', alias='vonNieda et al.', id='US20210274967A1', image='https://api.projectpq.ai/patents/US20210274967A1/thumbnails/1', index='A47J', inventors=['Olivia vonNieda', 'Jackson Shuttleworth'], mapping=None, owner='Jova Coffee Company', publication_date='2021-09-09', publication_id='US20210274967A1', score=0.10189545154571533, snippet=None, title='SYSTEMS AND METHODS FOR AUTOMATED COLD DRIP COFFEE', type='patent', www_link='https://patents.google.com/patent/US20210274967A1/en') search='coffee machine' summary='' percentages={'Adjustable brewing strength.': 0.7, 'Auto shut-off feature.': 0.5, 'Brews coffee.': 0.8, 'Compatible with coffee pods.': 0.9, 'Dispenses hot water.': 0.3, 'Has a built-in grinder.': 0.2, 'Has a milk frother.': 0.2, 'Programmable timer for brewing.': 0.2} citations={}", "timestamp": "2024-06-29T00:57:28.234955+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 40, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:58:05.394955+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:58:36.783147+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:58:40.947193+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
{"level": "INFO", "message": "This request used about 3016.0 tokens", "timestamp": "2024-06-29T00:58:49.255560+00:00", "logger": "__name__", "module": "llmRequests", "function": "makeRequest", "line": 26, "thread_name": "MainThread"}
{"level": "INFO", "message": "HTTP Request: POST https://api.openai.com/v1/chat/completions \"HTTP/1.1 200 OK\"", "timestamp": "2024-06-29T00:58:51.483173+00:00", "logger": "httpx", "module": "_client", "function": "_send_single_request", "line": 1026, "thread_name": "MainThread"}
{"level": "INFO", "message": "Received data: patentInfo=PatentInfo(abstract='A coffee machine is provided. The coffee machine may include an electronic control module configured to receive at least one flow set point and at least one temperature set point. The coffee machine may further include a portafilter, a group head configured to receive the portafilter, and at least one water line configured to supply water. The coffee machine may further include at least one syringe pump configured to pressurize the water to attain the at least one flow set point. The coffee machine may further include an in-line heating element configured to control temperature of the water according to the at least one temperature set point. The coffee machine may further include a feedback loop configured to provide the temperature to the electronic control module to enable selectively adjusting the temperature.', alias='Mohammad et al.', id='US11076715B1', image='https://api.projectpq.ai/patents/US11076715B1/thumbnails/1', index='A47J', inventors=['Ali H Mohammad', 'Ethan Miller'], mapping=None, owner='Nuli Coffee, Inc.', publication_date='2021-08-03', publication_id='US11076715B1', score=0.10414904356002808, snippet=None, title='Coffee machine with dynamic flow and temperature control', type='patent', www_link='https://patents.google.com/patent/US11076715B1/en') search='coffee machine' summary='' percentages={'Adjustable brewing strength.': 0.5, 'Auto shut-off feature.': 0.1, 'Brews coffee.': 0.7, 'Compatible with coffee pods.': 0.9, 'Dispenses hot water.': 0.1, 'Has a built-in grinder.': 0.1, 'Has a milk frother.': 0.3, 'Programmable timer for brewing.': 0.1} citations={}", "timestamp": "2024-06-29T00:58:53.306261+00:00", "logger": "__name__", "module": "routes", "function": "patent", "line": 40, "thread_name": "MainThread"}
{"level": "INFO", "message": "Started Up", "timestamp": "2024-06-29T00:59:55.091044+00:00", "logger": "__name__", "module": "run", "function": "<module>", "line": 24, "thread_name": "MainThread"}
