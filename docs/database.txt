CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE organization_payment (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  payment_method VARCHAR,
  payment_token VARCHAR,
  expires_at TIMESTAMP,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE user_payment (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  payment_method VARCHAR,
  payment_token VARCHAR,
  expires_at TIMESTAMP,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE organization (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  name VARCHAR,
  phone VARCHAR,
  features VARCHAR,
  payment_id UUID
);

CREATE TABLE organization_owner (
  organization_id UUID,
  user_id UUID
);

CREATE TABLE waitlist (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  email VARCHAR(255),
  phone_number VARCHAR(20)
);

CREATE TABLE organization_admin (
  organization_id UUID,
  user_id UUID
);

CREATE TABLE organization_user (
  organization_id UUID,
  user_id UUID
);

CREATE TABLE reg_user (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  first_name VARCHAR,
  last_name VARCHAR,
  email VARCHAR,
  password VARCHAR,
  phone VARCHAR,
  organization_id UUID,
  payment_id UUID
);

CREATE TABLE patent (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  pqai_id VARCHAR,
  name VARCHAR,
  folder_id UUID,
  description VARCHAR,
  organization_id UUID,
  google_patents_link VARCHAR
);

CREATE TABLE patent_read_permission (
  patent_id UUID,
  user_id UUID
);

CREATE TABLE patent_write_permission (
  patent_id UUID,
  user_id UUID
);

CREATE TABLE folder (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  name VARCHAR,
  description VARCHAR,
  organization_id UUID,
  parent_folder_id UUID
);

CREATE TABLE folder_user (
  folder_id UUID,
  user_id UUID
);

CREATE TABLE folder_patent (
  folder_id UUID,
  patent_id UUID
);

CREATE TABLE folder_read_permission (
  folder_id UUID,
  user_id UUID
);

CREATE TABLE folder_write_permission (
  folder_id UUID,
  user_id UUID
);

CREATE TABLE search (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  user_id UUID,
  query VARCHAR,
  time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE metric (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  search_id UUID,
  patent_id UUID,
  sentence VARCHAR,
  match_percentage INT
);

CREATE TABLE contact_queries (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  first_name VARCHAR,
  last_name VARCHAR,
  email VARCHAR,
  message VARCHAR
);

CREATE TABLE user_search_count (
  user_id UUID PRIMARY KEY,
  search_count INT
);

CREATE TABLE search_analytics (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  user_id UUID,
  search_id UUID,
  search_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Adding foreign key constraints
ALTER TABLE organization_payment ADD FOREIGN KEY (id) REFERENCES organization (id);

ALTER TABLE user_payment ADD FOREIGN KEY (id) REFERENCES reg_user (id);

ALTER TABLE organization_owner ADD FOREIGN KEY (organization_id) REFERENCES organization (id);

ALTER TABLE organization_owner ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE organization_admin ADD FOREIGN KEY (organization_id) REFERENCES organization (id);

ALTER TABLE organization_admin ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE organization_user ADD FOREIGN KEY (organization_id) REFERENCES organization (id);

ALTER TABLE organization_user ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE reg_user ADD FOREIGN KEY (organization_id) REFERENCES organization (id);

ALTER TABLE patent ADD FOREIGN KEY (folder_id) REFERENCES folder (id);

ALTER TABLE patent ADD FOREIGN KEY (organization_id) REFERENCES organization (id);

ALTER TABLE patent_read_permission ADD FOREIGN KEY (patent_id) REFERENCES patent (id);

ALTER TABLE patent_read_permission ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE patent_write_permission ADD FOREIGN KEY (patent_id) REFERENCES patent (id);

ALTER TABLE patent_write_permission ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE folder ADD FOREIGN KEY (organization_id) REFERENCES organization (id);

ALTER TABLE folder ADD FOREIGN KEY (parent_folder_id) REFERENCES folder (id);

ALTER TABLE folder_user ADD FOREIGN KEY (folder_id) REFERENCES folder (id);

ALTER TABLE folder_user ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE folder_patent ADD FOREIGN KEY (folder_id) REFERENCES folder (id);

ALTER TABLE folder_patent ADD FOREIGN KEY (patent_id) REFERENCES patent (id);

ALTER TABLE folder_read_permission ADD FOREIGN KEY (folder_id) REFERENCES folder (id);

ALTER TABLE folder_read_permission ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE folder_write_permission ADD FOREIGN KEY (folder_id) REFERENCES folder (id);

ALTER TABLE folder_write_permission ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE search ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE metric ADD FOREIGN KEY (search_id) REFERENCES search (id);

ALTER TABLE metric ADD FOREIGN KEY (patent_id) REFERENCES patent (id);

ALTER TABLE user_search_count ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE search_analytics ADD FOREIGN KEY (user_id) REFERENCES reg_user (id);

ALTER TABLE search_analytics ADD FOREIGN KEY (search_id) REFERENCES search (id);
